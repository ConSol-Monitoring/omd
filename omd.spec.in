Summary:        OMD Labs Edition - OpenSource Monitoring Distribution (Labs Edition)
Name:           omd-%{version}
Version:        SET BY MAKEFILE
Release:        SET BY MAKEFILE
License:        GPL
URL:            http://labs.consol.de/omd/
Group:          Application/System
Source:         %{name}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root
AutoReq:        off
AutoProv:       off
Provides:       omd
Requires:
%if 0%{?systemd_requires}
BuildRequires: systemd
%endif

#%define _missing_doc_files_terminate_build 0
#%define _unpackaged_files_terminate_build 0
# disable binary striping
%global __os_install_post %{nil}
# disable creating debug packages
%global debug_package %{nil}
%global _build_id_links none


%description
Open Source Monitoring Distribution (Labs Edition),
containing Nagios3 and Naemon, Icinga1 and Icinga 2, Shinken,
Thruk, Mod-Gearman, Nagvis, PNP4Nagios and many more...
Maintained by http://labs.consol.de/omd/.

%prep
# make builds reproducable and cacheable by not changing build root every day
rm -rf omd-%{version} omd
ln -s omd-%{version} omd
%setup -q -D -n omd
cd ..
rm omd
mv omd-%{version} omd
cd omd

%build
make -j 4
make pack

%install
mkdir -p $RPM_BUILD_ROOT
tar xzf omd-bin-%{version}.tar.gz -C $RPM_BUILD_ROOT
# Remove all global symbolic links from package. They are shared
# among all versions and must be handled in %post und %postun
# in order to avoid RPM conflicts
rm -f $RPM_BUILD_ROOT/opt/omd/versions/default
rm -f $RPM_BUILD_ROOT/omd
rm -f $RPM_BUILD_ROOT/usr/bin/omd
rm -f $RPM_BUILD_ROOT/usr/share/man/man8/omd.8.gz
rm -f $RPM_BUILD_ROOT/@APACHE_CONFDIR@/*
rm -f $RPM_BUILD_ROOT/etc/init.d/omd
find $RPM_BUILD_ROOT/opt/omd/versions/%{version}/bin/ -type f | grep -v waitmax | grep -v agent_modbus | grep -v \.dbg | xargs strip 2>&1 | grep -v 'File format not recognized' ||:
find $RPM_BUILD_ROOT/opt/omd/versions/%{version}/lib/nagios/plugins/ -type f | grep -v \.dbg | xargs strip 2>&1 | grep -v 'File format not recognized' ||:
find $RPM_BUILD_ROOT/opt/omd/versions/%{version}/lib/ -type f | grep -v waitmax | grep -v agent_modbus | grep -v \.dbg | xargs strip 2>&1 | grep -v 'File format not recognized' ||:

%files
%defattr(-,root,root)
/opt/omd
%caps(cap_net_raw,cap_net_bind_service+ep) /opt/omd/versions/%{version}/lib/monitoring-plugins/check_dhcp
%caps(cap_net_raw+ep) /opt/omd/versions/%{version}/lib/monitoring-plugins/check_icmp
%caps(cap_net_raw+ep) /opt/omd/versions/%{version}/bin/blackbox_exporter

%pre
groupadd -r omd 2>/dev/null || true
# create symlink if not exists
if [ ! -e /omd ]
then
    ln -sfn /opt/omd /omd
fi

%post
# Activate init script for OMD, but only the first
# time an OMD package is being installed. The admin
# might have deactivated the script himself and does
# not want to make it implicitely active again.
ACTIVATE_INIT=0
if [ ! -e /omd/versions/default ] ; then
    echo "Activating init script /etc/init.d/omd or systemd service"
    ACTIVATE_INIT=1
fi

echo "New default version is %{version}."
ln -sfn "%{version}" /omd/versions/default
ln -sfn /omd/versions/default/bin/omd /usr/bin/omd
ln -sfn /omd/versions/default/share/man/man8/omd.8.gz /usr/share/man/man8/omd.8.gz
ln -sfn /omd/versions/default/share/omd/omd.init /etc/init.d/omd
ln -sfn /omd/versions/default/share/omd/apache.conf @APACHE_CONFDIR@/zzz_omd.conf
mkdir -p /etc/bash_completion.d
ln -sfn /omd/versions/default/lib/omd/omd_bash_completion /etc/bash_completion.d/omd

# If the init script has been marked as to be activated
# really activate the init script now
if [ $ACTIVATE_INIT -eq 1 ]; then
    chkconfig --add omd >/dev/null 2>&1
    chkconfig omd on >/dev/null 2>&1
fi

%if 0%{?_unitdir:1}
if test -e /omd/versions/default/share/omd/omd.service; then
    cp /omd/versions/default/share/omd/omd.service %{_unitdir}/omd.service
    %systemd_post omd.service
    systemctl disable omd.service
    systemctl enable omd.service
fi
%endif



# SLES: make sure apache modules are activated
if which a2enmod >/dev/null 2>&1
then
    echo "Makeing sure that Apache modules proxy, http_proxy and rewrite are activated."
    a2enmod proxy 2>/dev/null || true
    a2enmod proxy_http 2>/dev/null || true
    a2enmod rewrite 2>/dev/null || true
%if 0%{?suse_version} > 1200
    # Only relevant for SLES12 or newer (having apache 2.4)
    # This still allows old permission configs like "Order: ..."
    a2enmod mod_access_compat 2>/dev/null || true
    a2enmod socache_shmcb 2>/dev/null || true
%endif
%if 0%{?suse_version} > 0
    a2enmod ssl 2>/dev/null || true
    a2enflag SSL 2>/dev/null || true
    # prepare ssl webserver
    serverkey=/etc/apache2/ssl.key/server.key
    if ! test -f /etc/apache2/vhosts.d/vhost-ssl.conf && ! test -f /etc/apache2/vhosts.d/vhost-ssl-omd.conf; then
        cp /etc/apache2/vhosts.d/vhost-ssl.template /etc/apache2/vhosts.d/vhost-ssl-omd.conf
        sed -i -e 's|vhost-example.crt|server.crt|g' -e 's|vhost-example.key|server.key|g' /etc/apache2/vhosts.d/vhost-ssl-omd.conf
    fi
    if ! test -f $serverkey || grep -q 'THIS FILE HAS TO BE REPLACED' $serverkey; then
        openssl req -new -config /omd/versions/%{version}/share/omd/openssl.cnf -keyout /etc/apache2/privkey.pem -batch > /etc/apache2/ssl.csr/omd.csr 2>/dev/null
        openssl rsa -in /etc/apache2/privkey.pem -out $serverkey -passin pass:selfsigned 2> /dev/null
        openssl x509 -in /etc/apache2/ssl.csr/omd.csr -out /etc/apache2/ssl.crt/server.crt -req -signkey $serverkey -days 3650 2> /dev/null
    fi
%endif
fi

ls -1 /etc/apache2/vhosts.d/vhost-ssl-omd.conf /etc/httpd/conf.d/ssl.conf 2>/dev/null | \
  while read file; do
      if ! grep /omd/apache/ $file >/dev/null 2>&1; then
          sed -i -e 's|</VirtualHost>|\n    @APACHE_INCLUDEOPT@ /omd/apache/*.include\n</VirtualHost>|g' $file
      fi
  done

# SLES: make sure that the following file exists:
if [ -d /etc/apache2/sysconfig.d ]
then
    touch /etc/apache2/sysconfig.d/include.conf
fi

# Make sure, global apache startscript is activated
chkconfig --add @APACHE_NAME@ >/dev/null 2>&1
chkconfig @APACHE_NAME@ on    >/dev/null 2>&1

# ensure apache is running
service @APACHE_NAME@ start >/dev/null 2>&1

# enable required selinux booleans
setsebool -P httpd_can_network_relay on   >/dev/null 2>&1
setsebool -P httpd_can_network_connect on >/dev/null 2>&1

exit 0

%preun
# on run if uninstalled, not during updates
if [ $1 = 0 ] ; then
    for link in /omd/sites/*/version
    do
        target=$(readlink $link 2>/dev/null) || continue
        version=${target##*/}
        if [ "$version" = %{version} ]
        then
            site=${link#/omd/sites/}
            site=${site%/version}
            echo "Site $site is still using this version, saving skel/ folder for later upgrade" >&2
            omd stop $site >/dev/null 2>&1
            rm -rf /omd/sites/$site/.backup_meta
            mkdir /omd/sites/$site/.backup_meta
            cp /omd/versions/$version/share/omd/skel.permissions /omd/sites/$site/.backup_meta/skel.permissions
            cp -r /omd/versions/$version/skel /omd/sites/$site/.backup_meta/
            chown -R $site:$site /omd/sites/$site/.backup_meta
        fi
    done
fi
exit 0


%postun
# on run if uninstalled, not during updates
if [ $1 = 0 ] ; then
# sles12 sometimes does not remove some empty folders
rm -rf /omd/versions/%{version}
rm -f /omd/versions/default
%if 0%{?_unitdir:1}
%systemd_postun omd.service
%endif
v=$(ls -A /omd/versions 2>/dev/null| sort -n | tail -n 1)
if [ -n "$v" ]
then
    echo "New default version is $v"
    ln -sfn "$v" /omd/versions/default
%if 0%{?_unitdir:1}
if test -e /omd/versions/default/share/omd/omd.service; then
cp /omd/versions/default/share/omd/omd.service %{_unitdir}/omd.service
%systemd_post omd.service
systemctl enable omd.service
fi
%endif
else
    echo "Removing system group 'omd'"
    groupdel omd
    echo "Removing global symbolic links"
    rm -f /usr/bin/omd
    rm -f /usr/share/man/man8/omd.8.gz
    rm -f /etc/init.d/omd
    rm -f /etc/bash_completion.d/omd
    rmdir /opt/omd/versions
    rm -f @APACHE_CONFDIR@/zzz_omd.conf
    rm -f /etc/apache2/vhosts.d/vhost-ssl-omd.conf
    rm -f /omd
    ls -1 /etc/apache2/vhosts.d/vhost-ssl-omd.conf /etc/httpd/conf.d/ssl.conf 2>/dev/null | \
      while read file; do
        if grep /omd/apache/ $file >/dev/null 2>&1; then
          sed -i -e '/Include.*\/omd\/apache/d' $file
        fi
      done


    # Try to remove empty directories
    rmdir /opt/omd/sites 2>/dev/null || true
    rmdir /opt/omd 2>/dev/null || true
    if type setsebool >/dev/null 2>&1; then
      echo "OMD enabled two SELinux booleans, since this is the last OMD package beeing removed, you"
      echo "might want to disable them again if you don't need these rules anymore:"
      echo "#> setsebool -P httpd_can_network_relay off"
      echo "#> setsebool -P httpd_can_network_connect off"
    fi
fi
fi
exit 0

