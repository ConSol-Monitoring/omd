#!/bin/sh
# postinst script for omd
#
# see: dh_installdeb(1)

set -e

NAGIOS_PLUGIN_PATH="/omd/versions/###OMD_VERSION###/lib/nagios/plugins"
SUID_PLUGINS="check_icmp check_dhcp"
PROGRAM_PATH="/omd/versions/###OMD_VERSION###/bin"
SUID_PROGRAMS="mkeventd_open514"
APACHE_OMD_CONF="/etc/apache2/conf.d/zzz_omd.conf"

# Source debconf library.
. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

setperm() {
    local user="$1"
    local group="$2"
    local mode="$3"
    local file="$4"
    shift 4
    # only do something when no setting exists
    if ! dpkg-statoverride --list "$file" >/dev/null 2>&1; then
      chown "$user":"$group" "$file"
      chmod "$mode" "$file"
    fi
}

case "$1" in
  configure)
    ln -sfn /opt/omd /omd
    update-alternatives --install /omd/versions/default \
       omd /omd/versions/###OMD_VERSION### ###OMD_SERIAL### \
       --slave /usr/bin/omd omd.bin /omd/versions/###OMD_VERSION###/bin/omd \
       --slave /etc/bash_completion.d/omd omd.bash_completion /omd/versions/###OMD_VERSION###/lib/omd/omd_bash_completion \
       --slave /usr/share/man/man8/omd.8.gz omd.man8 \
               /omd/versions/###OMD_VERSION###/share/man/man8/omd.8.gz

    # -- looking for group nagios, create it, if not exist
    if ! getent group omd > /dev/null ; then
      echo 'Adding system group omd' 1>&2
      addgroup --system --force-badname omd > /dev/null
    fi

    db_get omd/nagios-plugins-suid || true
    if [ "$RET" = "true" ]; then
      PLUGPERM="4754"
    else
      PLUGPERM="0755"
    fi
    for PLUGIN in $SUID_PLUGINS; do
      setperm root omd $PLUGPERM $NAGIOS_PLUGIN_PATH/$PLUGIN
    done
    for PROGRAM in $SUID_PROGRAMS; do
      setperm root omd $PLUGPERM $PROGRAM_PATH/$PROGRAM
    done

    db_stop
    # -- create apache config include if not exist
    if test -d /etc/apache2/conf-available; then
      # On e.g. ubuntu 13.10 conf.d is not loaded anymore, use conf-available
      APACHE_OMD_CONF="/etc/apache2/conf-available/zzz_omd.conf"
    fi

    if ! test -e $APACHE_OMD_CONF; then
      echo "IncludeOptional /omd/apache/*.conf" > $APACHE_OMD_CONF

      # -- enable conf include, when available
      ! test -x /usr/sbin/a2enconf || a2enconf zzz_omd
    fi

    # -- enable apache modules
    if ! test -e /etc/apache2/mods-enabled/proxy_http.load; then
       a2enmod proxy_http	# also enables dependend modules
    fi
    if ! test -e /etc/apache2/mods-enabled/rewrite.load; then
       a2enmod rewrite
    fi
    if ! test -e /etc/apache2/mods-enabled/ssl.load; then
        a2enmod ssl
        a2ensite default-ssl
    fi

    ls -1 /etc/apache2/sites-available/default-ssl 2>/dev/null | \
      while read file; do
        if ! grep /omd/apache/ $file >/dev/null 2>&1; then
          sed -i -e 's|</VirtualHost>|\n    IncludeOptional /omd/apache/*.include\n</VirtualHost>|g' $file
        fi
      done
    # -- default for init
    DEFAULT=/etc/default/omd
    if ! test -e $DEFAULT ; then
        echo "Activating init script /etc/init.d/omd"
        echo "AUTOSTART=1" > $DEFAULT
    fi

    echo "New default version is ###OMD_VERSION###."
    update-alternatives --set omd /omd/versions/###OMD_VERSION###

    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
