#!/bin/sh
# prerm script for omd
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

OMD="omd-###OMD_VERSION###"

case "$1" in
    remove)
      # Make sure no sites use that version
      for link in /omd/sites/*/version
      do
          target=$(readlink $link 2>/dev/null) || continue
          version=${target##*/}
          if [ "$version" = "###OMD_VERSION###" ]
          then
              site=${link#/omd/sites/}
              site=${site%/version}
              echo "Site $site is still using this version, saving skel/ folder for later upgrade" >&2
              omd stop $site >/dev/null 2>&1 || :
              rm -rf /omd/sites/$site/.backup_meta
              mkdir /omd/sites/$site/.backup_meta
              cp /omd/versions/$version/share/omd/skel.permissions /omd/sites/$site/.backup_meta/skel.permissions
              cp -r /omd/versions/$version/skel /omd/sites/$site/.backup_meta/
              chown -R $site:$site /omd/sites/$site/.backup_meta
          fi
      done
    ;;

    upgrade|deconfigure)
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

update-alternatives --remove  omd /omd/versions/###OMD_VERSION###

exit 0
