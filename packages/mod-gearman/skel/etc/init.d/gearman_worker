#!/bin/bash

# Check if Mod-Gearman is enabled in OMD. If not terminate.
cd $OMD_ROOT
. $OMD_ROOT/lib/omd/init_profile
. $OMD_ROOT/.profile
. $OMD_ROOT/etc/omd/site.conf
if [ "$CONFIG_MOD_GEARMAN" != "on" -o "$CONFIG_GEARMAN_WORKER" != "on" ] ; then
    exit 5
fi

DAEMON=$OMD_ROOT/bin/mod_gearman_worker-go
NAME=gearman_worker
PIDFILE=$OMD_ROOT/tmp/run/gearman_worker.pid

__init_hook $0 $1 pre
case "$1" in
    start)
        echo -n "Starting $NAME..."
        mkdir -p $OMD_ROOT/tmp/run
        mkdir -p $OMD_ROOT/var/log/gearman
        rm -f $OMD_ROOT/var/log/mod-gearman/gearman
        CMD="$DAEMON -d --config=$OMD_ROOT/etc/mod-gearman/worker.cfg --config=$OMD_ROOT/etc/mod-gearman/worker.cfg.d/ --pidfile=$PIDFILE"

        # worker opens lot of connections, so increase default ulimit to our hard limit
        ulimit -n $(ulimit -Hn) >/dev/null 2>&1

        $CMD
        if [ $? -eq 0 ]; then
            echo "OK"
            __init_hook $0 $1 post 0
        else
            echo "failed"
            __init_hook $0 $1 post 1
        fi
        ;;
    stop)
        echo -n "Stopping $NAME..."
        pid=`cat $PIDFILE 2>/dev/null`
        if [ -z $pid ]; then
            echo ". Not running."
        else
            kill $pid
            for x in 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5; do
                echo -n "."
                ps -p $pid > /dev/null 2>&1 && sleep 1;
            done
            ps -p $pid > /dev/null 2>&1;
            if [ $? -ne 0 ]; then
                echo "OK"
                __init_hook $0 $1 post 0
                exit 0;
            else
                echo "failed"
                __init_hook $0 $1 post 1
                exit 1;
            fi
        fi
        ;;
    reload|force-reload)
        echo "Reloading $NAME configuration files"
        pid=`cat $PIDFILE 2>/dev/null`
        if [ "$pid" != "" ]; then
            kill -HUP $pid
        fi
    ;;
    status)
        pid=`cat $PIDFILE 2>/dev/null`
        if [ "$pid" != "" ]; then
            ps -p $pid > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                echo "$NAME is running with pid $pid"
                exit 0;
            fi
        fi
        echo "$NAME is not running"
        exit 1;
    ;;
    restart)
        $0 stop && sleep 1 && $0 start
        exit $?
        ;;
    check)
        ;;
    *)
        echo "Usage: $NAME {start|stop|status|restart}"
        exit 1
        ;;
esac

exit 0
