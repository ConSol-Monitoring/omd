# OMD default settings.

# Please do not change settings here. Copy the variables
# you want to override to ../naemon.cfg and edit them there.
# Settings in naemon.cfg have always precedence.

# Settings for performance tuning

# STATUS FILE UPDATE INTERVAL
# This option determines the frequency (in seconds) that
# Naemon will periodically dump program, host, and 
# service status data.

status_update_interval=30

# EXTERNAL COMMAND OPTION
# This option allows you to specify whether or not Naemon should check
# for external commands (in the command file defined below).  By default
# Naemon will *not* check for external commands, just to be on the
# cautious side.  If you want to be able to use the CGI command interface
# you will have to enable this.
# Values: 0 = disable commands, 1 = enable commands

check_external_commands=1

# TIMEOUT VALUES
# These options control how much time Naemon will allow various
# types of commands to execute before killing them off.  Options
# are available for controlling maximum time allotted for
# service checks, host checks, event handlers, notifications, the
# ocsp command, and performance data commands.  All values are in
# seconds.

service_check_timeout=60
host_check_timeout=30
event_handler_timeout=30
notification_timeout=30
ocsp_timeout=5
perfdata_timeout=5

# CHILD PROCESS MEMORY OPTION
# This option determines whether or not Naemon will free memory in
# child processes (processed used to execute system commands and host/
# service checks).  If you specify a value here, it will override
# program defaults.
# Value: 1 - Free memory in child processes
#        0 - Do not free memory in child processes

#free_child_process_memory=1

# CHILD PROCESS FORKING BEHAVIOR
# This option determines how Naemon will fork child processes
# (used to execute system commands and host/service checks).  Normally
# child processes are fork()ed twice, which provides a very high level
# of isolation from problems.  Fork()ing once is probably enough and will
# save a great deal on CPU usage (in large installs), so you might
# want to consider using this.  If you specify a value here, it will
# program defaults.
# Value: 1 - Child processes fork() twice
#        0 - Child processes fork() just once

#child_processes_fork_twice=1


# DISABLE SERVICE CHECKS WHEN HOST DOWN
# This option will disable all service checks if the host is not in an UP state
#
# While desirable in some environments, enabling this value can distort report
# values as the expected quantity of checks will not have been performed

#host_down_disable_service_checks=0

