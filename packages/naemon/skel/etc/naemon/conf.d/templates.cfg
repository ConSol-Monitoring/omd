# Generic contact definition template
define contact{
  name                            generic-contact         ; The name of this contact template
  service_notification_period     24x7                    ; service notifications can be sent anytime
  host_notification_period        24x7                    ; host notifications can be sent anytime
  service_notification_options    w,u,c,r,f,s             ; send notifications for all service states, flapping events, and scheduled downtime events
  host_notification_options       d,u,r,f,s               ; send notifications for all host states, flapping events, and scheduled downtime events
  service_notification_commands   service-notify-by-email ; send service notifications via email
  host_notification_commands      host-notify-by-email    ; send host notifications via email
  register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
}

# Generic host definition template
define host{
  name                            generic-host     ; The name of this host template
  notifications_enabled           1                ; Host notifications are enabled
  event_handler_enabled           1                ; Host event handler is enabled
  flap_detection_enabled          1                ; Flap detection is enabled
  failure_prediction_enabled      1                ; Failure prediction is enabled
  process_perf_data               1                ; Process performance data
  retain_status_information       1                ; Retain status information across program restarts
  retain_nonstatus_information    1                ; Retain non-status information across program restarts
  notification_period             24x7             ; Send host notifications at any time
  check_period                    24x7             ; By default, hosts are checked round the clock
  check_interval                  5                ; Actively check the host every 5 minutes
  retry_interval                  1                ; Schedule host check retries at 1 minute intervals
  max_check_attempts              3                ; Check each host 3 times (max)
  check_command                   check-host-alive ; Default command to check Linux hosts
  notification_interval           120              ; Resend notifications every 2 hours
  notification_options            d,u,r            ; Only send notifications for specific host states
  register                        0               ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
}

# Generic service definition template
define service{
  name                            generic-service         ; The 'name' of this service template
  active_checks_enabled           1                       ; Active service checks are enabled
  passive_checks_enabled          1                       ; Passive service checks are enabled/accepted
  obsess_over_service             1                       ; We should obsess over this service (if necessary)
  check_freshness                 0                       ; Default is to NOT check service 'freshness'
  notifications_enabled           1                       ; Service notifications are enabled
  event_handler_enabled           1                       ; Service event handler is enabled
  flap_detection_enabled          1                       ; Flap detection is enabled
  failure_prediction_enabled      1                       ; Failure prediction is enabled
  process_perf_data               1                       ; Process performance data
  retain_status_information       1                       ; Retain status information across program restarts
  retain_nonstatus_information    1                       ; Retain non-status information across program restarts
  is_volatile                     0                       ; The service is not volatile
  check_period                    24x7                    ; The service can be checked at any time of the day
  max_check_attempts              3                       ; Re-check the service up to 3 times in order to determine its final (hard) state
  normal_check_interval           10                      ; Check the service every 10 minutes under normal conditions
  retry_check_interval            2                       ; Re-check the service every two minutes until a hard state can be determined
  notification_options            w,u,c,r                 ; Send notifications about warning, unknown, critical, and recovery events
  notification_interval           60                      ; Re-notify about service problems every hour
  notification_period             24x7                    ; Notifications can be sent out at any time
  register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
}

