#!/bin/bash

### OMD INIT INFO
# PIDFILE:  tmp/run/naemon.pid
# DEPENDS:  CONFIG_CORE = naemon
# BINARY:   bin/naemon
# ARGMATCH: tmp/naemon/naemon.cfg
### END INIT INFO

cd || exit 1
. etc/omd/site.conf
[ "$CONFIG_CORE" = "naemon" ] || exit 5
. .profile
. lib/omd/init_profile

NAME=naemon
DAEMON=$OMD_ROOT/bin/naemon
CFG_FILE=$OMD_ROOT/tmp/naemon/naemon.cfg
CMD_FILE=$OMD_ROOT/tmp/run/naemon.cmd
PID_FILE=$OMD_ROOT/tmp/run/naemon.pid
CHECKRESULTS_DIR=$OMD_ROOT/tmp/naemon/checkresults
CHECK_CALLBACK=verify_config
OPTS="-ud $CFG_FILE"
STOP_TIMEOUT=90
STOP_CALLBACK="save_retention"
RELOAD_STARTS=1

# You can set the environment variable CORE_NOVERIFY=yes
# in order to supress a verification of the core configuration
# in case of start, restart or reload.
# export CORE_NOVERIFY=yes

# OMD: create configuration file out of fragments
case "$1" in start|restart|reload|checkconfig|check)
    ln -sfn $OMD_ROOT/tmp/naemon $OMD_ROOT/tmp/core
    rm -f $CFG_FILE
    merge-core-config \
       $OMD_ROOT/etc/naemon/naemon.d/*.cfg \
       $OMD_ROOT/etc/naemon/naemon.cfg \
       > $CFG_FILE || rm -f $CFG_FILE
    if [ $? -ne 0 ]; then exit 1; fi
    if [ ! -f $CFG_FILE ]; then
        echo "${CONFIG_CORE} configuration file $CFG_FILE not found. Terminating..."
        exit 1
    fi

    # enabling naemon debuging mode if NAEMON_CORE_DEBUG env is set
    if [ "$NAEMON_CORE_DEBUG" = "1" ] || test -e ~/.naemon_debug_enabled; then
        # disable address space layout randomization (ASLR) which renders segfault addresses useless
        if setarch $(uname -m) -R ls >/dev/null 2>&1; then
            PRE_DAEMON="setarch $(uname -m) -R "
        fi
        # enable core files
        ulimit -c unlimited

        if grep bin/false /proc/sys/kernel/core_pattern >/dev/null; then
            echo "WARNING: core files are disabled from /proc/sys/kernel/core_pattern" >&2
        fi

        # enable .dbg variant of core and addons
        export LD_PRELOAD=$OMD_ROOT/lib/libnaemon.so.0.0.0.dbg
        DAEMON=$OMD_ROOT/bin/naemon.dbg
        sed -i $CFG_FILE \
            -e 's%/livestatus\.o %/livestatus.o.dbg %g' \
            -e 's%mod_gearman_naemon\.o %mod_gearman_naemon.o.dbg %g'
    fi
esac

verify_config() {
    if [ "$1" != "quiet" ]; then
        echo -n "Running configuration check... "
    fi
    RESULT=$($DAEMON -pv $CFG_FILE 2>&1)
    if [ $? -eq 0 ]; then
        if [ "$1" != "quiet" ]; then
            echo "done."
            echo "$RESULT" >&2
        fi
        return 0
    else
        if [ "$1" != "quiet" ]; then
            echo "CONFIG ERROR! Aborted. Check your naemon configuration."
        fi
        echo "$RESULT" >&2
        return 1
    fi
}

save_retention() {
  local COUNTER=$1
  if [ $COUNTER = '600' ]; then
    # we likely have to kill core, so at least give the core 30 seconds to write the retention.dat
    printf "[%lu] SAVE_STATE_INFORMATION;\n" `date +%s` > $CMD_FILE
  fi
}

case "$1" in start|restart)
    rm -f $CMD_FILE
    find $CHECKRESULTS_DIR/. -type f -delete >/dev/null 2>&1
esac
case "$1" in start|restart|reload)
    rm -f $OMD_ROOT/var/naemon/var/naemon/retention.dat??????
    rm -f $OMD_ROOT/var/naemon/objects.cache
esac

__generic_init "$*"
