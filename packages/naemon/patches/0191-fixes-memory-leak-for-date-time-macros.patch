From 22cae62fc96e28c776e75184bd35d9c32a8a6187 Mon Sep 17 00:00:00 2001
From: Alessandro Ren <dirty.ren@gmail.com>
Date: Mon, 19 Jun 2017 17:37:39 -0300
Subject: [PATCH 1/3] Fix memory leak for the DATE/TIME Macros

---
 src/naemon/macros.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/naemon/macros.c b/src/naemon/macros.c
index 700bc821..13966aa8 100644
--- a/src/naemon/macros.c
+++ b/src/naemon/macros.c
@@ -584,18 +584,19 @@ int grab_datetime_macro_r(nagios_macros *mac, int macro_type, char *arg1, char *
 		break;
 
 	case MACRO_TIMET:
-		*output = (char *)mkstr("%lu", (unsigned long)current_time);
+		asprintf(&*output, "%lu", (unsigned long)current_time);
 		break;
 
 	case MACRO_ISVALIDTIME:
-		*output = (char *)mkstr("%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
+		//*output = (char *)mkstr("%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
+		asprintf(&*output, "%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
 		break;
 
 	case MACRO_NEXTVALIDTIME:
 		get_next_valid_time(test_time, &next_valid_time, temp_timeperiod);
 		if (next_valid_time == test_time && check_time_against_period(test_time, temp_timeperiod) == ERROR)
 			next_valid_time = (time_t)0L;
-		*output = (char *)mkstr("%lu", (unsigned long)next_valid_time);
+		asprintf(&*output, "%lu", (unsigned long)next_valid_time);
 		break;
 
 	default:
@@ -1890,6 +1891,7 @@ static int grab_macrox_value_r(nagios_macros *mac, int macro_type, char *arg1, c
 
 		/* calculate macros */
 		result = grab_datetime_macro_r(mac, macro_type, arg1, arg2, output);
+		*free_macro = TRUE;
 		break;
 
 		/*****************/

From 0335087529552c9c4706cb3f75b9b873779dc65f Mon Sep 17 00:00:00 2001
From: Alessandro Ren <dirty.ren@gmail.com>
Date: Mon, 19 Jun 2017 17:39:34 -0300
Subject: [PATCH 2/3] Clean up code

---
 src/naemon/macros.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/naemon/macros.c b/src/naemon/macros.c
index 13966aa8..4564574d 100644
--- a/src/naemon/macros.c
+++ b/src/naemon/macros.c
@@ -588,7 +588,6 @@ int grab_datetime_macro_r(nagios_macros *mac, int macro_type, char *arg1, char *
 		break;
 
 	case MACRO_ISVALIDTIME:
-		//*output = (char *)mkstr("%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
 		asprintf(&*output, "%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
 		break;
 

From d3b7baf32e2527411b8b8a1227c2bbd8cd6e5476 Mon Sep 17 00:00:00 2001
From: Alessandro Ren <dirty.ren@gmail.com>
Date: Tue, 20 Jun 2017 09:41:04 -0300
Subject: [PATCH 3/3] Use nm_asprintf instead of asprintf and clean up output
 use

---
 src/naemon/macros.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/naemon/macros.c b/src/naemon/macros.c
index 4564574d..c0257fcf 100644
--- a/src/naemon/macros.c
+++ b/src/naemon/macros.c
@@ -584,18 +584,18 @@ int grab_datetime_macro_r(nagios_macros *mac, int macro_type, char *arg1, char *
 		break;
 
 	case MACRO_TIMET:
-		asprintf(&*output, "%lu", (unsigned long)current_time);
+		nm_asprintf(output, "%lu", (unsigned long)current_time);
 		break;
 
 	case MACRO_ISVALIDTIME:
-		asprintf(&*output, "%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
+		nm_asprintf(output, "%d", (check_time_against_period(test_time, temp_timeperiod) == OK) ? 1 : 0);
 		break;
 
 	case MACRO_NEXTVALIDTIME:
 		get_next_valid_time(test_time, &next_valid_time, temp_timeperiod);
 		if (next_valid_time == test_time && check_time_against_period(test_time, temp_timeperiod) == ERROR)
 			next_valid_time = (time_t)0L;
-		asprintf(&*output, "%lu", (unsigned long)next_valid_time);
+		nm_asprintf(output, "%lu", (unsigned long)next_valid_time);
 		break;
 
 	default:
