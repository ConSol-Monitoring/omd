--- a/icinga-app/icinga.cpp	2018-10-02 13:50:28.355916250 +0200
+++ b/icinga-app/icinga.cpp	2018-10-02 14:21:58.344916567 +0200
@@ -475,10 +475,10 @@
 		Logger::DisableTimestamp();
 #ifndef _WIN32
 		if (command->GetImpersonationLevel() == ImpersonateRoot) {
-			if (getuid() != 0) {
-				Log(LogCritical, "cli", "This command must be run as root.");
-				return 0;
-			}
+			//if (getuid() != 0) {
+			//	Log(LogCritical, "cli", "This command must be run as root.");
+			//	return 0;
+			//}
 		} else if (command && command->GetImpersonationLevel() == ImpersonateIcinga) {
 			String group = Application::GetRunAsGroup();
 			String user = Application::GetRunAsUser();
@@ -498,21 +498,21 @@
 				}
 			}
 
-			if (getgid() != gr->gr_gid) {
-				if (!vm.count("reload-internal") && setgroups(0, nullptr) < 0) {
-					Log(LogCritical, "cli")
-						<< "setgroups() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
-					Log(LogCritical, "cli")
-						<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
-					return EXIT_FAILURE;
-				}
-
-				if (setgid(gr->gr_gid) < 0) {
-					Log(LogCritical, "cli")
-						<< "setgid() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
-					return EXIT_FAILURE;
-				}
-			}
+			//if (getgid() != gr->gr_gid) {
+			//	if (!vm.count("reload-internal") && setgroups(0, nullptr) < 0) {
+			//		Log(LogCritical, "cli")
+			//			<< "setgroups() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
+			//		Log(LogCritical, "cli")
+			//			<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
+			//		return EXIT_FAILURE;
+			//	}
+
+			//	if (setgid(gr->gr_gid) < 0) {
+			//		Log(LogCritical, "cli")
+			//			<< "setgid() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
+			//		return EXIT_FAILURE;
+			//	}
+			//}
 
 			errno = 0;
 			struct passwd *pw = getpwnam(user.CStr());
@@ -530,23 +530,23 @@
 			}
 
 			// also activate the additional groups the configured user is member of
-			if (getuid() != pw->pw_uid) {
-				if (!vm.count("reload-internal") && initgroups(user.CStr(), pw->pw_gid) < 0) {
-					Log(LogCritical, "cli")
-						<< "initgroups() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
-					Log(LogCritical, "cli")
-						<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
-					return EXIT_FAILURE;
-				}
-
-				if (setuid(pw->pw_uid) < 0) {
-					Log(LogCritical, "cli")
-						<< "setuid() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
-					Log(LogCritical, "cli")
-						<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
-					return EXIT_FAILURE;
-				}
-			}
+			//if (getuid() != pw->pw_uid) {
+			//	if (!vm.count("reload-internal") && initgroups(user.CStr(), pw->pw_gid) < 0) {
+			//		Log(LogCritical, "cli")
+			//			<< "initgroups() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
+			//		Log(LogCritical, "cli")
+			//			<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
+			//		return EXIT_FAILURE;
+			//	}
+
+			//	if (setuid(pw->pw_uid) < 0) {
+			//		Log(LogCritical, "cli")
+			//			<< "setuid() failed with error code " << errno << ", \"" << Utility::FormatErrorNumber(errno) << "\"";
+			//		Log(LogCritical, "cli")
+			//			<< "Please re-run this command as a privileged user or using the \"" << user << "\" account.";
+			//		return EXIT_FAILURE;
+			//	}
+			//}
 		}
 
 		Process::InitializeSpawnHelper();
