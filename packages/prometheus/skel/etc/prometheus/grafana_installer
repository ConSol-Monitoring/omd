#! /usr/bin/python

import os.path, sys, time
from grafana_utils import Grafana

"""
- get a list of all known datasources, get id of prometheus
  if there is no prometheus datasource
      create one
      import the promstats dashboard
  elsif there was a portchange
      update the datasource url
"""

datasource_name = "Prometheus"
port_changed_flag = os.path.join(os.environ['OMD_ROOT'], 'prometheusportupdated')

if not Grafana.ping(10):
    sys.exit(2)

grafana = Grafana()
prometheus_url = 'http://%s:%s/%s/prometheus' % (Grafana.omd_settings['CONFIG_PROMETHEUS_TCP_ADDR'], Grafana.omd_settings['CONFIG_PROMETHEUS_TCP_PORT'], os.environ['OMD_SITE'])
ds = grafana.get_datasource(datasource_name)

if ds == None:
    print "creating datasource %s " % (datasource_name,),
    ds = grafana.create_datasource(name=datasource_name, type='prometheus',
        url=prometheus_url,
        access='proxy',
        isDefault=False
    )
    print "OK" if ds else "FAIL"

    if ds:
        print "importing dashboard Prometheus Stats",
        if grafana.import_dashboard(pluginId='prometheus', path='dashboards/prometheus_stats.json',
            overwrite=False,
            inputs=[{
                'name': '*',
                'type': 'datasource',
                'pluginId': 'prometheus',
                'value': datasource_name
            }]):
            print "OK"
        else:
            print "FAIL"

elif os.path.exists(port_changed_flag):
    print "influxdb port has changed, trying to update datasource ",

    if ds.update(url=prometheus_url):
        print "OK"
        os.remove(port_changed_flag)

    else:
        print "FAIL"

sys.exit(0)
