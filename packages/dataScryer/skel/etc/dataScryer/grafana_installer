#! /usr/bin/python

import os.path, sys, time
from grafana_utils import Grafana

"""
- get a list of all known datasources, get id of influxdb
  if there is no influxdb datasource
      create one
  elsif there was a portchange
      update the datasource url
"""

if not Grafana.ping():
    sys.exit(2)

grafana = Grafana()
influxdb_url = 'http://%s' % (Grafana.omd_settings['CONFIG_INFLUXDB_HTTP_TCP_PORT'].replace('0.0.0.0:', '127.0.0.1:'),)
port_changed_flag = os.path.join(os.environ['OMD_ROOT'], 'var', 'tmp', 'influxportupdated')

names = ["nagflux_forecast", "nagflux_anomaly"]
grafana_user='grafana'
grafana_password='grafana'

for datasource_name in names:
    ds = grafana.get_datasource(datasource_name)
    if ds == None:
        print "creating datasource %s " % (datasource_name,),

        default = True if datasource_name == "nagflux" else False
        ds = grafana.create_datasource(name=datasource_name, type='influxdb',
            url=influxdb_url,
            access='proxy',
            isDefault=default,
            database=datasource_name,
            user=grafana_user,
            password=grafana_password
        )
        print "OK" if ds else "FAIL"

    elif os.path.exists(port_changed_flag):
        print "influxdb port has changed, trying to update datasource ",

        if ds.update(url=influxdb_url,user=grafana_user,password=grafana_password):
            print "OK"
            os.remove(port_changed_flag)

        else:
            print "FAIL"

sys.exit(0)
