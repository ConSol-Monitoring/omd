#!/bin/bash

### OMD INIT INFO
# PIDFILE:  tmp/run/influxdb.pid
# DEPENDS:  CONFIG_INFLUXDB = on
# BINARY:   bin/influxd
# ARGMATCH: etc/influxdb/influxdb.conf
### END INIT INFO

cd || exit 1
. etc/omd/site.conf
if [ "$CONFIG_INFLUXDB" != "on" ] ; then
    exit 5
fi
. lib/omd/init_profile

NAME=influxdb
DAEMON="$OMD_ROOT/version/bin/influxd"
PID_FILE="$OMD_ROOT/tmp/run/influxdb.pid"
LOG_FILE="$OMD_ROOT/var/log/influxdb.log"
OPTS="run -config $OMD_ROOT/etc/influxdb/influxdb.conf -pidfile $PID_FILE"
NOHUP=1
START_CALLBACK=influxd_post_start

#### Logindata:
# Admin:
USER="omdadmin"
PASS="omd"
# Grafana(only read):
GRAFANA_USER="grafana"
GRAFANA_PASS="grafana"
####
ADDRESS=$(echo $CONFIG_INFLUXDB_HTTP_TCP_PORT | perl -lne 'print $1 if /([a-zA-Z0-9\.\-]+)?:([0-9]+)/')
PORT=$(echo $CONFIG_INFLUXDB_HTTP_TCP_PORT | perl -lne 'print $2 if /([a-zA-Z0-9\.\-]+)?:([0-9]+)/')
if [ "x$PORT" = "x" ]; then
ADDRESS=127.0.0.1
PORT=$CONFIG_INFLUXDB_HTTP_TCP_PORT
fi
CONNECT="-host $ADDRESS -port $PORT"
INFLUXD_PROTO="http"
CHECK_INFLUXDB_OPTIONS=""
if [ "x$CONFIG_INFLUXDB_MODE" = "xssl" ]; then
    INFLUXD_PROTO="https"
    CONNECT="$CONNECT -ssl -unsafeSsl"
    CHECK_INFLUXDB_OPTIONS="--unsafessl"
fi

# create state dir
mkdir -p $OMD_ROOT/var/influxdb/db \
         $OMD_ROOT/var/influxdb/raft

influxd_post_start() {
    for x in $(seq 600); do
        $OMD_ROOT/lib/monitoring-plugins/check_influxdb m ping --address $INFLUXD_PROTO://$ADDRESS:$PORT $CHECK_INFLUXDB_OPTIONS > /dev/null && break;
        [ $((x%10)) -eq 0 ] && echo -n "."
        sleep 0.1
    done
    # set admin user
    echo "CREATE USER $USER WITH PASSWORD '$PASS' WITH ALL PRIVILEGES" | influx $CONNECT -username $USER -password $PASS >/dev/null
    # set grafana user
    echo "CREATE USER $GRAFANA_USER WITH PASSWORD '$GRAFANA_PASS'" | influx $CONNECT -username $USER -password $PASS >/dev/null
    echo "CREATE DATABASE nagflux" | influx $CONNECT -username $USER -password $PASS >/dev/null
    echo "GRANT READ ON nagflux TO $GRAFANA_USER" | influx $CONNECT -username $USER -password $PASS >/dev/null
    # on the first start it takes a few seconds until the _internal database exists
    if ! test -d $OMD_ROOT/var/influxdb/data/_internal/; then
        echo -n "first run, waiting for initial _internal database"
        for x in $(seq 600); do
            [ $(echo "SHOW DATABASES" | influx $CONNECT -username $USER -password $PASS | grep -c _internal) -eq 1 ] && break;
            [ $((x%10)) -eq 0 ] && echo -n "."
            sleep 0.1
        done
    fi
    echo "GRANT READ ON _internal TO $GRAFANA_USER" | influx $CONNECT -username $USER -password $PASS >/dev/null
    # check for default retention policy
    echo 'SHOW RETENTION POLICIES ON nagflux' | influx $CONNECT -username $USER -password $PASS 2>/dev/null | grep -q '^autogen.*true'
    if [ $? -eq 0 ]; then
        # autogen only exists on some databases; let's keep the data within this bucket
        # until https://github.com/influxdata/influxdb/issues/8351 is implemented
        # which makes it possible to rename autogen to default
        echo 'ALTER RETENTION POLICY "autogen" ON "nagflux" DURATION '${CONFIG_INFLUXDB_RETENTION}w' DEFAULT' | influx $CONNECT -username $USER -password $PASS >/dev/null
    else
        echo 'SHOW RETENTION POLICIES ON nagflux' | influx $CONNECT -username $USER -password $PASS 2>/dev/null | grep -q ^default
        if [ $? -ne 0 ]; then
            echo 'CREATE RETENTION POLICY "default" ON "nagflux" DURATION '${CONFIG_INFLUXDB_RETENTION}w' REPLICATION 1 DEFAULT' | influx $CONNECT -username $USER -password $PASS >/dev/null
        else
            echo 'ALTER RETENTION POLICY "default" ON "nagflux" DURATION '${CONFIG_INFLUXDB_RETENTION}w' DEFAULT' | influx $CONNECT -username $USER -password $PASS >/dev/null
        fi
    fi
}

case "$1" in
    start)
        # remove memory limits which cause startup problems
        ulimit -m unlimited >/dev/null 2>&1
        ulimit -v unlimited >/dev/null 2>&1

        # influx uses lots memory when hitting open files limit
        ulimit -n $(ulimit -Hn) >/dev/null 2>&1
    ;;
esac

__generic_init "$*"
