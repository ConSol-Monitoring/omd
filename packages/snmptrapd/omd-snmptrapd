#! /bin/sh
# Copyright (c) ConSol* Software GmbH
#
# Author: Gerhard Lausser
#
# /etc/init.d/omd-snmptrapd
#
### BEGIN INIT INFO
# Provides:            omd-snmptrapd
# Required-Start:      $network
# Required-Stop:
# Default-Start:       2 3 5
# Default-Stop:        0 1 6
# Description:         Start the samplicate daemon which forwards udp packets
# Short-Description:   Start the samplicate daemon which forwards udp packets
### END INIT INFO

HOSTADDRESS=$(getent hosts $HOSTNAME | sort -u | grep -v ^127 | awk '{ print $1 }')

SAMPLICATE=/opt/omd/versions/default/bin/samplicate
PIDFILE=/var/run/samplicate.pid

function site_targets() {
  TGTS=""
  for siteconf in /omd/sites/*/etc/omd/site.conf
  do
    if ! [[ "$siteconf" =~ \* ]]; then
      CONFIG_SNMPTRAPD=
      CONFIG_SNMPTRAPD_UDP_PORT=
      eval $(cat $siteconf)
      if [ "$CONFIG_SNMPTRAPD" == "on" ]; then
        TGTS="$TARGETS 127.0.0.1/$CONFIG_SNMPTRAPD_UDP_PORT"
      fi
    fi
  done
  echo $TGTS
}

TARGETS="$(site_targets)"
test -n "$TARGETS" || { echo "snmp trap destinations not configured";
        if [ "$1" = "stop" ]; then exit 0;
        else exit 5; fi; }

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
#
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signalling is not supported) are
# considered a success.
case "$1" in
    start)
        echo -n "Starting SNMP trap forwarding: "
	$SAMPLICATE -m $PIDFILE -S -p 162 -f $TARGETS
        rc_status -v
        ;;
    stop)
        echo -n "Stopping SNMP trap forwarding: "
	if [ -f $PIDFILE ]; then
		killproc -p $PIDFILE -TERM $SAMPLICATE
	fi
        rc_status -v
        ;;
    try-restart)
        $0 status >/dev/null &&  $0 restart
        rc_status
        ;;
    restart|force-reload|reload)
        $0 stop
        $0 start
        rc_status
        ;;
    status)
        echo -n "Checking for SNMP trap forwarding: "
        checkproc -k -p $PIDFILE $SAMPLICATE
	if [ $? -eq 7 ]; then
		rc_failed 3
	fi
        rc_status -v
        ;;
    targets)
	echo -n "Current targets: "
	CURRENT_TARGETS=$(pgrep -a samplicate | sed -e 's/.*-f //g')
	if [ "$TARGETS" != "$CURRENT_TARGETS" ]; then
		echo -n "changed"
		rc_failed 3
	else
		echo -n "unchanged"
		rc_failed 0
	fi
	rc_status -v
	;;
    *)
        echo "Usage: $0 {start|stop|try-restart|restart|force-reload|reload|status}"
        exit 1
        ;;
esac
rc_exit

