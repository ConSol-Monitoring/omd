From fc8f4083166ca0c408c846efca347ed9dea9b7c0 Mon Sep 17 00:00:00 2001
From: Sven Nierlein <sven@consol.de>
Date: Fri, 22 Sep 2023 10:38:09 +0200
Subject: [PATCH] add host/service_notification_commands to contacts

Signed-off-by: Sven Nierlein <sven@consol.de>
---
 src/CommandsMemberColumn.cc | 60 +++++++++++++++++++++++++++++++++++++
 src/CommandsMemberColumn.h  | 25 ++++++++++++++++
 src/Makefile.am             |  2 +-
 src/TableContacts.cc        |  5 ++++
 4 files changed, 91 insertions(+), 1 deletion(-)
 create mode 100644 src/CommandsMemberColumn.cc
 create mode 100644 src/CommandsMemberColumn.h

diff --git a/src/CommandsMemberColumn.cc b/src/CommandsMemberColumn.cc
new file mode 100644
index 0000000..054264c
--- /dev/null
+++ b/src/CommandsMemberColumn.cc
@@ -0,0 +1,60 @@
+#include "CommandsMemberColumn.h"
+#include "nagios.h"
+#include "Query.h"
+
+commandsmember *CommandsMemberColumn::getData(void *data)
+{
+    if (data) {
+        data = shiftPointer(data);
+        if (data)
+            return *(commandsmember **)((char *)data + _offset);
+    }
+    return 0;
+}
+
+void CommandsMemberColumn::output(void *data, Query *query)
+{
+    query->outputBeginList();
+    commandsmember *list = getData(data);
+    if (list) {
+        bool first = true;
+        while (list) {
+            command *co = (command *)list->command_ptr;
+            if (!first)
+                query->outputListSeparator();
+            else
+                first = false;
+            query->outputString(co->name);
+            list = list->next;
+        }
+    }
+    query->outputEndList();
+}
+
+void *CommandsMemberColumn::getNagiosObject(char *name)
+{
+    return find_command(name);
+}
+
+bool CommandsMemberColumn::isNagiosMember(void *data, void *nagobject)
+{
+    if (!nagobject || !data)
+        return false;
+
+    // data is already shifted (_indirect_offset is taken into account)
+    // But _offset needs still to be accounted for
+    commandsmember *list = *(commandsmember **)((char *)data + _offset);
+
+    while (list) {
+        if (list->command_ptr == nagobject)
+            return true;
+        list = list->next;
+    }
+    return false;
+}
+
+bool CommandsMemberColumn::isEmpty(void *data)
+{
+    commandsmember *list = *(commandsmember **)((char *)data + _offset);
+    return list == 0;
+}
diff --git a/src/CommandsMemberColumn.h b/src/CommandsMemberColumn.h
new file mode 100644
index 0000000..f4f9ddf
--- /dev/null
+++ b/src/CommandsMemberColumn.h
@@ -0,0 +1,25 @@
+#ifndef CommandsMemberColumn_h
+#define CommandsMemberColumn_h
+
+#include "config.h"
+
+#include "ListColumn.h"
+#include "nagios.h"
+
+
+class CommandsMemberColumn : public ListColumn
+{
+    int _offset;
+public:
+    CommandsMemberColumn(string name, string description, int offset, int indirect_offset)
+        : ListColumn(name, description, indirect_offset), _offset(offset) {}
+    int type() { return COLTYPE_LIST; }
+    void output(void *, Query *);
+    void *getNagiosObject(char *name); // return pointer to host group
+    bool isNagiosMember(void *data, void *nagobject);
+    bool isEmpty(void *data);
+private:
+    commandsmember *getData(void *);
+};
+
+#endif // CommandsMemberColumn_h
diff --git a/src/Makefile.am b/src/Makefile.am
index 2a13f32..ff8630c 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -56,7 +56,7 @@ livestatus_la_SOURCES = \
 	HostlistDependencyColumn.cc HostlistDependencyColumnFilter.cc \
 	ServicelistDependencyColumn.cc ServicelistDependencyColumnFilter.cc \
 	ContactgroupsColumn.cc RowSortedSet.cc HostServiceState.cc opids.cc auth.cc \
-	ContactgroupsObjectlistColumn.cc
+	ContactgroupsObjectlistColumn.cc CommandsMemberColumn.cc
 
 if HAVE_DIET
 	diet -v $(CC) -x c -Wno-deprecated-declarations $(CFLAGS) $(LDFLAGS) -I.. -s -o $@ $^
diff --git a/src/TableContacts.cc b/src/TableContacts.cc
index 858d3c4..f130b19 100644
--- a/src/TableContacts.cc
+++ b/src/TableContacts.cc
@@ -31,6 +31,7 @@
 #include "AttributelistColumn.h"
 #include "CustomVarsColumn.h"
 #include "ContactgroupsObjectlistColumn.h"
+#include "CommandsMemberColumn.h"
 
 TableContacts::TableContacts()
 {
@@ -86,6 +87,10 @@ void TableContacts::addColumns(Table *table, string prefix, int indirect_offset)
                 "A list of all modified attributes", (char *)(&ctc.modified_attributes) - ref, indirect_offset, true));
     table->addColumn(new ContactgroupsObjectlistColumn(prefix + "groups",
                 "A list of all contact groups this contact is in", (char *)(&ctc.contactgroups_ptr) - ref, indirect_offset));
+    table->addColumn(new CommandsMemberColumn(prefix + "host_notification_commands",
+                "A list of all host notifications commands for this contact", (char *)(&ctc.host_notification_commands) - ref, indirect_offset));
+    table->addColumn(new CommandsMemberColumn(prefix + "service_notification_commands",
+                "A list of all service notifications commands for this contact", (char *)(&ctc.service_notification_commands) - ref, indirect_offset));
 
     table->clearNatSort();
     table->addNatSort( prefix + "name" );
