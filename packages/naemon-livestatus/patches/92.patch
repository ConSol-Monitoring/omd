From aa3ed1c19824895ed8a59004b05258a91c5f39ed Mon Sep 17 00:00:00 2001
From: Sven Nierlein <sven@nierlein.de>
Date: Thu, 9 Sep 2021 15:41:09 +0200
Subject: [PATCH 1/2] fix EADDRINUSE when reloading with tcp socket enabled

without the SO_REUSEADDR / SO_REUSEPORT option lingering TIME_WAIT connections will prevent naemon from loading the module after a reload.

for details see:
 - https://stackoverflow.com/questions/14388706/how-do-so-reuseaddr-and-so-reuseport-differ
 - https://developer.ibm.com/tutorials/l-sockpit/#pitfall-3-address-in-use-error-eaddrinuse-

to reproduce, start naemon and send a keepalive query to livestatus. Naemon will then stop when trying
to reload with 'Unable to bind to...' error.
---
 src/module.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/src/module.c b/src/module.c
index 34207f7..3e1d77a 100644
--- a/src/module.c
+++ b/src/module.c
@@ -269,6 +269,7 @@ int open_inet_socket()
 {
     char *socket_addr, *ip_str, *port_str, *save;
     unsigned long port;
+    int yes = 1;
 
     g_socket_fd = socket(AF_INET, SOCK_STREAM, 0);
     if (g_socket_fd < 0) {
@@ -321,6 +322,17 @@ int open_inet_socket()
             return false;
         }
     }
+
+    if (setsockopt(g_socket_fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes)) < 0) {
+        logger(LG_CRIT , "Unable to set setsockopt(SO_REUSEADDR): %s", strerror(errno));
+        return false;
+    }
+
+    if (setsockopt(g_socket_fd, SOL_SOCKET, SO_REUSEPORT, &yes, sizeof(yes)) < 0) {
+        logger(LG_CRIT , "Unable to set setsockopt(SO_REUSEPORT): %s", strerror(errno));
+        return false;
+    }
+
     if (bind(g_socket_fd, (struct sockaddr *) &sockaddr, sizeof(sockaddr)) < 0) {
         logger(LG_ERR, "Unable to bind to '%s'", g_socket_addr, strerror(errno));
         close(g_socket_fd);

From 2770d43a31646202b3aa7bb565a8f837fce0dec3 Mon Sep 17 00:00:00 2001
From: Sven Nierlein <sven@nierlein.de>
Date: Mon, 27 Sep 2021 13:41:40 +0200
Subject: [PATCH 2/2] make SO_REUSEPORT optional

it got introduced with linux kernel >= 3.9
---
 src/module.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/module.c b/src/module.c
index 3e1d77a..fc4370e 100644
--- a/src/module.c
+++ b/src/module.c
@@ -328,10 +328,12 @@ int open_inet_socket()
         return false;
     }
 
+#ifdef SO_REUSEPORT
     if (setsockopt(g_socket_fd, SOL_SOCKET, SO_REUSEPORT, &yes, sizeof(yes)) < 0) {
         logger(LG_CRIT , "Unable to set setsockopt(SO_REUSEPORT): %s", strerror(errno));
         return false;
     }
+#endif
 
     if (bind(g_socket_fd, (struct sockaddr *) &sockaddr, sizeof(sockaddr)) < 0) {
         logger(LG_ERR, "Unable to bind to '%s'", g_socket_addr, strerror(errno));
