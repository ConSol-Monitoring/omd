#!/bin/bash

### OMD INIT INFO
# PIDFILE:  tmp/run/alertmanager.pid
# DEPENDS:  CONFIG_ALERTMANAGER = on
# BINARY:   bin/alertmanager
# ARGMATCH: web.listen-address
### END INIT INFO

cd || exit 1
. etc/omd/site.conf
[ "$CONFIG_ALERTMANAGER" = "on" ] || exit 5
. .profile
. lib/omd/init_profile

[ -r etc/alertmanager/vars ] \
&& [ -f etc/alertmanager/vars ] \
&& . etc/alertmanager/vars

mkdir -p $OMD_ROOT/tmp/alertmanager
mkdir -p $OMD_ROOT/var/alertmanager
DAEMON=$OMD_ROOT/bin/alertmanager
TOOL=$OMD_ROOT/bin/amtool
CFG_FILE=$OMD_ROOT/tmp/alertmanager/alertmanager.yml
LOG_DIR=$OMD_ROOT/var/alertmanager
LOG_FILE=$OMD_ROOT/var/alertmanager/alertmanager.log
PID_FILE=$OMD_ROOT/tmp/run/alertmanager.pid
DATA_DIR=$OMD_ROOT/var/alertmanager/data

EXTERNAL_FQDN=${OMD_EXTERNAL_FQDN:-$(hostname --fqdn)}

OPTS=""
OPTS+=" --config.file $CFG_FILE"
OPTS+=" --web.listen-address=$CONFIG_ALERTMANAGER_TCP_ADDR:$CONFIG_ALERTMANAGER_TCP_PORT"
OPTS+=" --web.external-url=http://${EXTERNAL_FQDN}/$OMD_SITE/alertmanager"
OPTS+=" --storage.path=$DATA_DIR"

if [ -n "$CLUSTER_LISTEN_ADDRESS" ] ; then
       # Cluster mode active
  OPTS+=" --cluster.listen-address $CLUSTER_LISTEN_ADDRESS"
  for peer in "${CLUSTER_PEERS[@]}"; do
    OPTS+=" --cluster.peer $peer"
  done
else
  OPTS+=" --cluster.listen-address="
fi

OPTS+=" $EXTRA_OPTIONS"
NOHUP=1
STORE_PID=1
CHECK_CALLBACK=verify_config


# Put together fragments and build a new alertmanager.yml
rebuild_config() {
    cp $OMD_ROOT/etc/alertmanager/alertmanager.yml $CFG_FILE
    WORK_CFG=$OMD_ROOT/tmp/alertmanager.yml.$$
    if grep -q "# - start of routes" $CFG_FILE && grep -q "# - end of routes" $CFG_FILE; then
        cat $CFG_FILE |\
            sed -n '1,/# - start of routes/p' > $WORK_CFG
        # all files in $OMD_ROOT/etc/alertmanager/alertmanager.d/routes/*/*.yml
        for routes in $OMD_ROOT/etc/alertmanager/alertmanager.d/routes/*.yml
        do
            [ -f $routes ] && cat $routes >> $WORK_CFG
        done
        for routes in $OMD_ROOT/etc/alertmanager/alertmanager.d/routes/*
        do
            if [ -d $routes ]; then
                for subroutes in ${routes}/*.yml
                do
                    [ -f $subroutes ] && cat $subroutes >> $WORK_CFG
                done
            fi
        done
        cat $CFG_FILE |\
            sed -n '/# - end of routes/,$p' >> $WORK_CFG
        cp $WORK_CFG $CFG_FILE
    fi

    if grep -q "# - start of inhibit_rules" $CFG_FILE && grep -q "# - end of inhibit_rules" $CFG_FILE; then
        cat $CFG_FILE |\
            sed -n '1,/# - start of inhibit_rules/p' > $WORK_CFG
        # all files in $OMD_ROOT/etc/alertmanager/alertmanager.d/inhibit_rules/*/*.yml
        for inhibits in $OMD_ROOT/etc/alertmanager/alertmanager.d/inhibit_rules/*.yml
        do
            [ -f $inhibits ] && cat $inhibits >> $WORK_CFG
        done
        for inhibits in $OMD_ROOT/etc/alertmanager/alertmanager.d/inhibit_rules/*
        do
            if [ -d $inhibits ]; then
                for subinhibits in ${inhibits}/*.yml
                do
                    [ -f $subinhibits ] && cat $subinhibits >> $WORK_CFG
                done
            fi
        done
        cat $CFG_FILE |\
            sed -n '/# - end of inhibit_rules/,$p' >> $WORK_CFG
        cp $WORK_CFG $CFG_FILE
    fi

    if grep -q "# - start of receivers" $CFG_FILE && grep -q "# - end of receivers" $CFG_FILE; then
        cat $CFG_FILE |\
            sed -n '1,/# - start of receivers/p' > $WORK_CFG
        # all files in $OMD_ROOT/etc/alertmanager/alertmanager.d/receivers/*/*.yml
        for receivers in $OMD_ROOT/etc/alertmanager/alertmanager.d/receivers/*.yml
        do
            [ -f $receivers ] && cat $receivers >> $WORK_CFG
        done
        for receivers in $OMD_ROOT/etc/alertmanager/alertmanager.d/receivers/*
        do
            if [ -d $receivers ]; then
                for subreceivers in ${receivers}/*.yml
                do
                    [ -f $subreceivers ] && cat $subreceivers >> $WORK_CFG
                done
            fi
        done
        cat $CFG_FILE |\
            sed -n '/# - end of receivers/,$p' >> $WORK_CFG
        cp $WORK_CFG $CFG_FILE
    fi

    for y in $OMD_ROOT/etc/alertmanager/alertmanager.d/*.yml
    do
       test -f $y && cat $y >> $CFG_FILE
    done
    sed -ri "s&""#""#""#ROOT#""#""#""&$OMD_ROOT&g" $CFG_FILE
    sed -ri "s&""#""#""#SITE#""#""#""&$OMD_SITE&g" $CFG_FILE
    sed -ri "s/###ALERTMANAGER_TCP_PORT###/$CONFIG_ALERTMANAGER_TCP_PORT/g" $CFG_FILE
    sed -ri "s/###ALERTMANAGER_TCP_ADDR###/$CONFIG_ALERTMANAGER_TCP_ADDR/g" $CFG_FILE

    rm -f "$WORK_CFG"
}

verify_config() {
    if [ "$1" != "quiet" ]; then
        echo -n "Running configuration check... "
    fi
    RESULT=$($TOOL check-config $CFG_FILE 2>&1)
    if [ $? -eq 0 ]; then
        if [ "$1" != "quiet" ]; then
            echo "done."
            echo "$RESULT" >&2
        fi
        return 0
    else
        if [ "$1" != "quiet" ]; then
            echo "CONFIG ERROR! Aborted. Check your Alertmanager configuration."
        fi
        echo "$RESULT" >&2
        return 1
    fi
}

case "$1" in start|restart|reload|check|checkconfig)
    rebuild_config
    if [ ! -f $CFG_FILE ]; then
        echo "Alertmanager configuration file $CFG_FILE not found. Terminating..."
        exit 1
    fi
esac

__generic_init "$*"
