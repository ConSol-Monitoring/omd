#!/bin/bash
#
# OMD - Pre Update Hook
#
# This script prepares the site to fix some known issues which causes update conflicts.
# It will be run prior the update process with the new OMD.

cd $OMD_ROOT

NEW_VERSION=$(grep ^OMD_VERSION $(dirname $0)/../../../../bin/omd | awk '{ print $3 }' | tr -d '"')
OLD_VERSION=$(readlink version | sed 's%.*versions/\([0-9]*\.*[0-9]*\)[-\.].*$%\1%')
# convert version to int so we can compare it in bash
# version 2.20 becomes 220
OLD_VERSION=$(( $(( ${OLD_VERSION%.*} * 100 )) + ${OLD_VERSION#*.} ))
OLD_SKEL=version/skel
if [ -e ".backup_meta/skel" ]; then
    # when restoring from an non-installed version, skel folder is here
    OLD_SKEL=".backup_meta/skel"
fi

# apply some fixes to versions until 2.20
if [ $OLD_VERSION -le 220 ]; then
  # remove file created by hook to prevent update conflict
  rm -f etc/shinken/apache.conf

  # restore original file from skel to prevent update conflict
  test -e etc/mongodb/mongod.cfg && sed -e 's%###ROOT###%'$OMD_ROOT'%g' $OLD_SKEL/etc/mongodb/mongod.cfg > etc/mongodb/mongod.cfg
  test -e etc/mongodb/mongod.d/port.conf && cat $OLD_SKEL/etc/mongodb/mongod.d/port.conf > etc/mongodb/mongod.d/port.conf

  # influxdb port conflicts: reset port to default port from skel, then update. After the update the hook will set the actual port
  test -e etc/influxdb/influxdb.conf && sed -e "/^\[http\]/,/^\[/{s/.*bind-address = .*$/$(grep '^\[http\]' -A 10 $OLD_SKEL/etc/influxdb/influxdb.conf | grep '^\s*bind-address')/}" -i etc/influxdb/influxdb.conf
  test -e etc/nagflux/config.gcfg && sed -e "/^\[Influx/,/^\[/{s%^\s*Address = \"http.*$%$(grep '^\[Influx' -A 10 $OLD_SKEL/etc/nagflux/config.gcfg | grep '^\s*Address')%}" -i etc/nagflux/config.gcfg
  test -e etc/nagflux/config.gcfg && sed -e "/^\[Elasticsearch/,/^\[/{s%^\s*Address = \"http.*$%$(grep '^\[Elasticsearch' -A 10 $OLD_SKEL/etc/nagflux/config.gcfg | grep '^\s*Address')%}" -i etc/nagflux/config.gcfg
  test -e etc/influxdb/influxdb.conf && sed -e "1,/^\[/{s/^bind-address = .*$/$(grep '^bind-address' $OLD_SKEL/etc/influxdb/influxdb.conf)/}" -i etc/influxdb/influxdb.conf
fi

# migrate cgi.cfg content into thruks cgi.cfg
if test -h etc/thruk/cgi.cfg && test -f etc/nagios/cgi.cfg; then
    cp /omd/versions/$NEW_VERSION/skel/etc/thruk/cgi.cfg etc/thruk/cgi.cfg.update
    for key in $(grep -v ^# etc/nagios/cgi.cfg | grep -v ^\ *$); do
        name=$(echo "$key" | awk -F = '{ print $1 '})
        value=$(echo "$key" | sed -e 's/^'$name'\ *=\ *//')
        sed -e 's#^'$name'\ *=.*$#'$name'='$value'#g' -i etc/thruk/cgi.cfg.update
    done
    rm etc/nagios/cgi.cfg
    sed -e 's%###ROOT###%'$OMD_ROOT'%g' $OLD_SKEL/etc/nagios/cgi.cfg > etc/nagios/cgi.cfg
    sed -e 's%###SITE###%'$OMD_SITE'%g' -i etc/nagios/cgi.cfg
fi

# migrate nagios/icinga leftovers to naemon
OLDCORE=$(readlink etc/init.d/core >/dev/null 2>&1)
if test -h etc/naemon/conf.d && test -f etc/nagios/conf.d; then
    rm -f etc/naemon/conf.d
    mv etc/nagios/conf.d etc/naemon/
fi
if [ "x$OLDCORE" != "x" -a "x$OLDCORE" != "xnaemon" ]; then
  mv var/$OLDCORE/archive/* var/naemon/archive/ >/dev/null 2>&1
fi
mkdir -p local/share/logos
mv local/share/nagios/htdocs/images/logos/* local/share/logos/ >/dev/null 2>&1
if ! test -h local/lib/nagios/plugins; then
  mkdir -p local/lib/monitoring-plugins
  mv local/lib/nagios/plugins/* local/lib/monitoring-plugins/ >/dev/null 2>&1
fi
# remove files created by obsolete hooks
rm -f local/share/nagios/htdocs/theme/images
rm -f local/share/nagios/htdocs/theme/stylesheets
rm -f etc/nagvis/urls.ini.php
rm -f etc/nagios/nagios.d/pnp4nagios.cfg
rm -f etc/icinga/icinga.d/pnp4nagios.cfg
rm -f etc/check_mk/multisite.d/mkeventd.mk
rm -f etc/nagios/nagios.d/mod-gearman.cfg
rm -f etc/icinga/icinga.d/mod-gearman.cfg

exit 0
