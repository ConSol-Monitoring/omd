#!/bin/bash
#
# OMD - Pre Update Hook
#
# This script prepares the site to fix some known issues which causes update conflicts.
# It will be run prior the update process with the new OMD.

cd $OMD_UPDATE_BASE || exit 1
umask 0022

NEW_VERSION=$OMD_UPDATE_TO_VERSION
OLD_VERSION=$OMD_UPDATE_FROM_VERSION
if [ -z "$NEW_VERSION" -o -z "$OLD_VERSION" ]; then
    echo "missing environment, please set at least OMD_UPDATE_TO_VERSION and OMD_UPDATE_FROM_VERSION"
    exit 1
fi
# convert version to int so we can compare it in bash
# version 2.20 becomes 220
MAJOR=${OLD_VERSION%%.*}
MINOR=${OLD_VERSION#*.}
MINOR=${MINOR%%.*}
OLD_VERSION=$(( $(( $MAJOR * 100 )) + $MINOR ))

OLD_SKEL=version/skel
if [ -e ".backup_meta/skel" ]; then
    # when restoring from an non-installed version, skel folder is here
    OLD_SKEL=".backup_meta/skel"
fi

# apply some fixes to versions until 2.20
if [ $OLD_VERSION -le 220 ]; then
  # remove file created by hook to prevent update conflict
  rm -f etc/shinken/apache.conf

  # restore original file from skel to prevent update conflict
  test -e etc/mongodb/mongod.cfg && sed -e 's%###ROOT###%'$OMD_ROOT'%g' $OLD_SKEL/etc/mongodb/mongod.cfg > etc/mongodb/mongod.cfg
  test -e etc/mongodb/mongod.d/port.conf && cat $OLD_SKEL/etc/mongodb/mongod.d/port.conf > etc/mongodb/mongod.d/port.conf

  # influxdb port conflicts: reset port to default port from skel, then update. After the update the hook will set the actual port
  test -e etc/influxdb/influxdb.conf && sed -e "/^\[http\]/,/^\[/{s/.*bind-address = .*$/$(grep '^\[http\]' -A 10 $OLD_SKEL/etc/influxdb/influxdb.conf | grep '^\s*bind-address')/}" -i etc/influxdb/influxdb.conf
  test -e etc/nagflux/config.gcfg && sed -e "/^\[Influx/,/^\[/{s%^\s*Address = \"http.*$%$(grep '^\[Influx' -A 10 $OLD_SKEL/etc/nagflux/config.gcfg | grep '^\s*Address')%}" -i etc/nagflux/config.gcfg
  test -e etc/nagflux/config.gcfg && sed -e "/^\[Elasticsearch/,/^\[/{s%^\s*Address = \"http.*$%$(grep '^\[Elasticsearch' -A 10 $OLD_SKEL/etc/nagflux/config.gcfg | grep '^\s*Address')%}" -i etc/nagflux/config.gcfg
  test -e etc/influxdb/influxdb.conf && sed -e "1,/^\[/{s/^bind-address = .*$/$(grep '^bind-address' $OLD_SKEL/etc/influxdb/influxdb.conf)/}" -i etc/influxdb/influxdb.conf
fi

# migrate cgi.cfg content into thruks cgi.cfg
if test -h etc/thruk/cgi.cfg && test -f etc/nagios/cgi.cfg; then
    cp /omd/versions/$NEW_VERSION/skel/etc/thruk/cgi.cfg etc/thruk/cgi.cfg.update
    for key in $(grep -v ^# etc/nagios/cgi.cfg | grep -v ^\ *$); do
        name=$(echo "$key" | awk -F = '{ print $1 '})
        value=$(echo "$key" | sed -e 's/^'$name'\ *=\ *//')
        sed -e 's#^'$name'\ *=.*$#'$name'='$value'#g' -i etc/thruk/cgi.cfg.update
    done
    rm etc/nagios/cgi.cfg
    sed -e 's%###ROOT###%'$OMD_ROOT'%g' $OLD_SKEL/etc/nagios/cgi.cfg > etc/nagios/cgi.cfg
    sed -e 's%###SITE###%'$OMD_SITE'%g' -i etc/nagios/cgi.cfg
fi

if [ $OLD_VERSION -le 300 ]; then
  # migrate nagios/icinga leftovers to naemon
  OLDCORE=$(omd config show CORE 2>&1)
  if test -h etc/naemon/conf.d && test -d etc/nagios/conf.d; then
      rm -f etc/naemon/conf.d
      mv etc/nagios/conf.d etc/naemon/
  fi
  if [ "x$OLDCORE" = "xicinga" -o "x$OLDCORE" = "xnagios" ]; then
    omd config set CORE naemon
    mv var/$OLDCORE/archive/* var/naemon/archive/ >/dev/null 2>&1
    mv var/$OLDCORE/*.log var/naemon/ >/dev/null 2>&1
    mv var/$OLDCORE/retention.dat var/naemon/ >/dev/null 2>&1
    mv etc/$OLDCORE/resource.cfg etc/naemon/ >/dev/null 2>&1
  fi
  rm -f var/nagios/*.log var/nagios/*.cache var/nagios/*.precache var/nagios/*.gz
  rm -f var/icinga/*.log var/icinga/*.cache var/icinga/*.precache var/icinga/*.gz
  mkdir -p local/share/logos
  mv local/share/nagios/htdocs/images/logos/* local/share/logos/ >/dev/null 2>&1
  if ! test -h local/lib/nagios/plugins; then
    mkdir -p local/lib/monitoring-plugins
    mv local/lib/nagios/plugins/* local/lib/monitoring-plugins/ >/dev/null 2>&1
  fi

  # remove files created by obsolete hooks
  rm -f local/share/nagios/htdocs/theme/images
  rm -f local/share/nagios/htdocs/theme/stylesheets
  rm -f etc/nagvis/conf.d/urls.ini.php
  rm -f etc/nagios/nagios.d/pnp4nagios.cfg
  rm -f etc/nagios/nagios.d/nagflux.cfg
  rm -f etc/nagios/nagios.d/mod-gearman.cfg
  rm -f etc/icinga/icinga.d/pnp4nagios.cfg
  rm -f etc/icinga/icinga.d/nagflux.cfg
  rm -f etc/icinga/icinga.d/mod-gearman.cfg
  rm -f etc/check_mk/multisite.d/mkeventd.mk
fi

if [ $OLD_VERSION -le 400 ]; then

  # apply only if victoriametrics was used before:
  if  [ -f etc/victoriametrics/db.secrets ] ; then
    echo "migration for victoriametrics"
    # renaming of CONFIG VARS
    sed -e 's%VICTORIAMETRICS_BASE_PORT%VICTORIAMETRICS_PORT%' -i etc/omd/site.conf
    # reset variable from old 3x site.conf (otherwise port is changed)
    export VICTORIAMETRICS_BASE_PORT=

    # create new config file
    cp etc/victoriametrics/db.secrets etc/victoriametrics/victoriametrics.conf

    # load old config file into env:
    . etc/victoriametrics/db.secrets
    if [ $? -gt 0 ] ; then
      echo "error processing old config "
      exit 8
    fi
    # retention to OMD Config
    #check for manual change in init.d script:
    omd diff etc/init.d/victoriametrics | grep -e "+.*retentionPeriod=" > /dev/null
    if [ $? -eq 0 ] ; then
       echo "manual change to rentention in etc/init.d/victoriametrics -> Abort Upgrade"
       exit 8
    else
       echo "CONFIG_VICTORIAMETRICS_RETENTION=${retentionPeriod:-1}" >> etc/omd/site.conf
       sed -E 's/^(.*retentionPeriod=.*)/# moved to OMD Config var: \1/' -i etc/victoriametrics/victoriametrics.conf
    fi

    # migration of old defaults to new config file:

    if [[ "${dedup_minScrapeInterval+defined}" != "defined"  ]] ; then
      grep dedup.minScrapeInterval etc/init.d/victoriametrics >/dev/null
      if [ $? -eq 0 ] ; then
        echo "export dedup_minScrapeInterval='30s'" >> etc/victoriametrics/victoriametrics.conf
      fi
    fi

    #add prefic to config vars in config file:
    # get all config vars:
    envvars=$(victoria-metrics-prod -h | grep "^\W*-" | awk '{print $1;}' | sed -E 's/^-//; s/[\.-]/_/g')
    envvars_regex=""
    for placeholder in $envvars ; do
          envvars_regex+="$placeholder|"
    done
    # prefixing:
    sed -E "s/([^_]?)(${envvars_regex}version)/\1vm_\2/g" -i.bak etc/victoriametrics/victoriametrics.conf

    #finally move old config_file
    mv etc/victoriametrics/db.secrets etc/victoriametrics/db.secrets_omd3x

    # env victoriametrics migration
  fi
  #end pre omd 4
fi

exit 0
