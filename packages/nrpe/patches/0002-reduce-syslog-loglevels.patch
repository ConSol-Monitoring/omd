--- nrpe-3.0.1/src/check_nrpe.c.orig	2017-03-31 16:47:25.835767278 +0200
+++ nrpe-3.0.1/src/check_nrpe.c	2017-03-31 16:50:28.647171221 +0200
@@ -149,7 +149,7 @@
 
 	if (result == -1) {
 		/* Failure reading from remote, so try version 2 packet */
-		syslog(LOG_NOTICE, "Remote %s does not support Version 3 Packets", rem_host);
+		syslog(LOG_DEBUG, "Remote %s does not support Version 3 Packets", rem_host);
 		packet_ver = NRPE_PACKET_VERSION_2;
 
 		/* Rerun the setup */
@@ -169,7 +169,7 @@
 	}
 
 	if (result != -1)
-		syslog(LOG_NOTICE, "Remote %s accepted a Version %d Packet", rem_host, packet_ver);
+		syslog(LOG_DEBUG, "Remote %s accepted a Version %d Packet", rem_host, packet_ver);
 
 	return result;
 }
@@ -258,7 +258,7 @@
 
 		case 't':
 			if (from_config_file && socket_timeout != -1) {
-				syslog(LOG_WARNING, "WARNING: Command-line socket timeout overrides "
+				syslog(LOG_DEBUG, "WARNING: Command-line socket timeout overrides "
 								"the config file option.");
 				break;
 			}
@@ -269,7 +269,7 @@
 
 		case 'p':
 			if (from_config_file && server_port != 0) {
-				syslog(LOG_WARNING, "WARNING: Command-line server port overrides "
+				syslog(LOG_DEBUG, "WARNING: Command-line server port overrides "
 								"the config file option.");
 				break;
 			}
@@ -280,7 +280,7 @@
 
 		case 'P':
 			if (from_config_file && payload_size > 0) {
-				syslog(LOG_WARNING, "WARNING: Command-line payload-size (-P) overrides "
+				syslog(LOG_DEBUG, "WARNING: Command-line payload-size (-P) overrides "
 								"the config file option.");
 				break;
 			}
@@ -291,7 +291,7 @@
 
 		case 'H':
 			if (from_config_file && server_name != NULL) {
-				syslog(LOG_WARNING, "WARNING: Command-line server name overrides "
+				syslog(LOG_DEBUG, "WARNING: Command-line server name overrides "
 								"the config file option.");
 				break;
 			}
@@ -322,7 +322,7 @@
 
 		case 'u':
 			if (from_config_file && timeout_return_code != -1) {
-				syslog(LOG_WARNING, "WARNING: Command-line unknown-timeout (-u) "
+				syslog(LOG_DEBUG, "WARNING: Command-line unknown-timeout (-u) "
 								"overrides the config file option.");
 				break;
 			}
@@ -331,7 +331,7 @@
 
 		case '2':
 			if (from_config_file && packet_ver != NRPE_PACKET_VERSION_3) {
-				syslog(LOG_WARNING, "WARNING: Command-line v2-packets-only (-2) "
+				syslog(LOG_DEBUG, "WARNING: Command-line v2-packets-only (-2) "
 								"overrides the config file option.");
 				break;
 			}
@@ -340,7 +340,7 @@
 
 		case '4':
 			if (from_config_file && address_family != AF_UNSPEC) {
-				syslog(LOG_WARNING, "WARNING: Command-line ipv4 (-4) "
+				syslog(LOG_DEBUG, "WARNING: Command-line ipv4 (-4) "
 								"or ipv6 (-6) overrides the config file option.");
 				break;
 			}
@@ -349,7 +349,7 @@
 
 		case '6':
 			if (from_config_file && address_family != AF_UNSPEC) {
-				syslog(LOG_WARNING, "WARNING: Command-line ipv4 (-4) "
+				syslog(LOG_DEBUG, "WARNING: Command-line ipv4 (-4) "
 								"or ipv6 (-6) overrides the config file option.");
 				break;
 			}
@@ -358,7 +358,7 @@
 
 		case 'd':
 			if (from_config_file && sslprm.allowDH != -1) {
-				syslog(LOG_WARNING, "WARNING: Command-line use-adh (-d) "
+				syslog(LOG_DEBUG, "WARNING: Command-line use-adh (-d) "
 								"overrides the config file option.");
 				break;
 			}
@@ -369,7 +369,7 @@
 
 		case 'A':
 			if (from_config_file && sslprm.cacert_file != NULL) {
-				syslog(LOG_WARNING, "WARNING: Command-line ca-cert-file (-A) "
+				syslog(LOG_DEBUG, "WARNING: Command-line ca-cert-file (-A) "
 								"overrides the config file option.");
 				break;
 			}
@@ -378,7 +378,7 @@
 
 		case 'C':
 			if (from_config_file && sslprm.cert_file != NULL) {
-				syslog(LOG_WARNING, "WARNING: Command-line client-cert (-C) "
+				syslog(LOG_DEBUG, "WARNING: Command-line client-cert (-C) "
 								"overrides the config file option.");
 				break;
 			}
@@ -388,7 +388,7 @@
 
 		case 'K':
 			if (from_config_file && sslprm.privatekey_file != NULL) {
-				syslog(LOG_WARNING, "WARNING: Command-line key-file (-K) "
+				syslog(LOG_DEBUG, "WARNING: Command-line key-file (-K) "
 								"overrides the config file option.");
 				break;
 			}
@@ -398,7 +398,7 @@
 
 		case 'S':
 			if (from_config_file && sslprm.ssl_min_ver != SSL_Ver_Invalid) {
-				syslog(LOG_WARNING, "WARNING: Command-line ssl-version (-S) "
+				syslog(LOG_DEBUG, "WARNING: Command-line ssl-version (-S) "
 								"overrides the config file option.");
 				break;
 			}
@@ -428,7 +428,7 @@
 
 		case 'L':
 			if (from_config_file && sslprm.cipher_list[0] != '\0') {
-				syslog(LOG_WARNING, "WARNING: Command-line cipher-list (-L) "
+				syslog(LOG_DEBUG, "WARNING: Command-line cipher-list (-L) "
 								"overrides the config file option.");
 				break;
 			}
@@ -438,7 +438,7 @@
 
 		case 's':
 			if (from_config_file && have_log_opts == TRUE) {
-				syslog(LOG_WARNING, "WARNING: Command-line ssl-logging (-s) "
+				syslog(LOG_DEBUG, "WARNING: Command-line ssl-logging (-s) "
 								"overrides the config file option.");
 				break;
 			}
@@ -722,19 +722,19 @@
 	if (sslprm.log_opts & SSL_LogStartup) {
 		char *val;
 
-		syslog(LOG_INFO, "SSL Certificate File: %s",
+		syslog(LOG_DEBUG, "SSL Certificate File: %s",
 			   sslprm.cert_file ? sslprm.cert_file : "None");
-		syslog(LOG_INFO, "SSL Private Key File: %s",
+		syslog(LOG_DEBUG, "SSL Private Key File: %s",
 			   sslprm.privatekey_file ? sslprm.privatekey_file : "None");
-		syslog(LOG_INFO, "SSL CA Certificate File: %s",
+		syslog(LOG_DEBUG, "SSL CA Certificate File: %s",
 			   sslprm.cacert_file ? sslprm.cacert_file : "None");
 		if (sslprm.allowDH < 2)
-			syslog(LOG_INFO, "SSL Cipher List: %s", sslprm.cipher_list);
+			syslog(LOG_DEBUG, "SSL Cipher List: %s", sslprm.cipher_list);
 		else
-			syslog(LOG_INFO, "SSL Cipher List: ADH");
-		syslog(LOG_INFO, "SSL Allow ADH: %s",
+			syslog(LOG_DEBUG, "SSL Cipher List: ADH");
+		syslog(LOG_DEBUG, "SSL Allow ADH: %s",
 			   sslprm.allowDH == 0 ? "No" : (sslprm.allowDH == 1 ? "Allow" : "Require"));
-		syslog(LOG_INFO, "SSL Log Options: 0x%02x", sslprm.log_opts);
+		syslog(LOG_DEBUG, "SSL Log Options: 0x%02x", sslprm.log_opts);
 		switch (sslprm.ssl_min_ver) {
 		case SSLv2:
 			val = "SSLv2";
@@ -770,7 +770,7 @@
 			val = "INVALID VALUE!";
 			break;
 		}
-		syslog(LOG_INFO, "SSL Version: %s", val);
+		syslog(LOG_DEBUG, "SSL Version: %s", val);
 	}
 
 	/* initialize SSL */
@@ -838,7 +838,7 @@
 			if (strlen(sslprm.cipher_list) < sizeof(sslprm.cipher_list) - 6) {
 				strcat(sslprm.cipher_list, ":!ADH");
 				if (sslprm.log_opts & SSL_LogStartup)
-					syslog(LOG_INFO, "New SSL Cipher List: %s", sslprm.cipher_list);
+					syslog(LOG_DEBUG, "New SSL Cipher List: %s", sslprm.cipher_list);
 			}
 		} else {
 			/* use anonymous DH ciphers */
@@ -961,7 +961,7 @@
 	} else {
 
 		if (sslprm.log_opts & SSL_LogVersion)
-			syslog(LOG_NOTICE, "Remote %s - SSL Version: %s", rem_host, SSL_get_version(ssl));
+			syslog(LOG_DEBUG, "Remote %s - SSL Version: %s", rem_host, SSL_get_version(ssl));
 
 		if (sslprm.log_opts & SSL_LogCipher) {
 # if (defined(__sun) && defined(SOLARIS_10)) || defined(_AIX) || defined(__hpux)
@@ -969,7 +969,7 @@
 # else
 			const SSL_CIPHER *c = SSL_get_current_cipher(ssl);
 # endif
-			syslog(LOG_NOTICE, "Remote %s - %s, Cipher is %s", rem_host,
+			syslog(LOG_DEBUG, "Remote %s - %s, Cipher is %s", rem_host,
 				   SSL_CIPHER_get_version(c), SSL_CIPHER_get_name(c));
 		}
 
@@ -979,13 +979,13 @@
 
 			if (peer) {
 				if (sslprm.log_opts & SSL_LogIfClientCert)
-					syslog(LOG_NOTICE, "SSL %s has %s certificate",
+					syslog(LOG_DEBUG, "SSL %s has %s certificate",
 					       rem_host, SSL_get_verify_result(ssl) ? "a valid" : "an invalid");
 				if (sslprm.log_opts & SSL_LogCertDetails) {
 				        X509_NAME_oneline(X509_get_subject_name(peer), buffer, sizeof(buffer));
-					syslog(LOG_NOTICE, "SSL %s Cert Name: %s", rem_host, buffer);
+					syslog(LOG_DEBUG, "SSL %s Cert Name: %s", rem_host, buffer);
 					X509_NAME_oneline(X509_get_issuer_name(peer), buffer, sizeof(buffer));
-					syslog(LOG_NOTICE, "SSL %s Cert Issuer: %s", rem_host, buffer);
+					syslog(LOG_DEBUG, "SSL %s Cert Issuer: %s", rem_host, buffer);
 				}
 
 			} else
